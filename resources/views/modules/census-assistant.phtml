<?php

use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Individual;
use Fisharebest\Webtrees\View;

/**
 * @var Individual|null $individual
 */

?>

<div class="census-assistant-link" hidden>
    <a href="#">
        <?= I18N::translate('Create a shared note using the census assistant') ?>
    </a>
</div>

<div id="census-assistant" hidden>
    <input type="hidden" name="ca_census" class="census-assistant-class">
    <div class="form-group">
        <div class="input-group">
            <label class="input-group-text" for="census-assistant-title">
                <?= I18N::translate('Title') ?>
            </label>

            <input class="form-control" id="census-assistant-title" name="ca_title" value="">
        </div>
    </div>

    <div class="row">
        <div class="form-group col-sm-6">
            <div class="input-group">
                <label class="input-group-text" for="census-assistant-citation">
                    <?= I18N::translate('Citation') ?>
                </label>

                <input class="form-control" id="census-assistant-citation" name="ca_citation">
            </div>
        </div>

        <div class="form-group col-sm-6">
            <div class="input-group">
                <label class="input-group-text" for="census-assistant-place">
                    <?= I18N::translate('Place') ?>
                </label>

                <input class="form-control" id="census-assistant-place" name="ca_place">
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="input-group">
            <span class="input-group-text">
                <?= I18N::translate('Individuals') ?>
            </span>

            <?= view('components/select-individual', ['name' => 'census-assistant-individual', 'individual' => $individual, 'tree' => $individual->tree()]) ?>

            <button type="button" class="btn btn-primary census-assistant-add" title="<?= I18N::translate('add') ?>">
                <?= view('icons/add') ?>
            </button>
        </div>
    </div>

    <div class="form-group">
        <div class="input-group">
            <div class="input-group-prepend">
                <label for="census-assistant-family" class="input-group-text">
                    <?= I18N::translate('Family members') ?>
                </label>
            </div>
            <select id="census-assistant-family" class="form-control select2" name="census-assistant-family">
              <option><!-- Select2 placeholder --></option>
            </select>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered table-small small wt-census-assistant-table"
        id="census-assistant-table">
            <thead class="wt-census-assistant-header"></thead>
            <tbody class="wt-census-assistant-body"></tbody>
        </table>
    </div>

    <div class="form-group">
        <div class="input-group">
            <label class="input-group-text" for="census-assistant-notes">
                <?= I18N::translate('Comments') ?>
            </label>

            <textarea class="form-control" id="census-assistant-notes" name="ca_notes" rows="3"></textarea>
        </div>
    </div>
</div>

<?php View::push('javascript') ?>
<script>
  const fam_selector = document.getElementById('census-assistant-family');

  // When a census date/place is selected, activate the census-assistant
  function censusAssistantSelect() {
    const select = this;
    const option = select.options[select.selectedIndex];
    const form = select.closest('form');

    form.querySelector('.census-assistant-class').value = option.dataset.wtCensus;

    form.querySelector('.census-assistant-class').value = option.dataset.census;

    const censusAssistantLink = document.querySelector('.census-assistant-link');
    const censusAssistant     = document.querySelector('#census-assistant');
    const censusOption        = this.options[this.selectedIndex];
    const census              = censusOption.dataset.wtCensus;
    const censusPlace         = censusOption.dataset.wtPlace;
    const censusYear          = censusOption.dataset.wtDate.substr(-4);

    if (censusOption.value !== '') {
      censusAssistantLink.removeAttribute('hidden');
    } else {
      censusAssistantLink.setAttribute('hidden', '');
    }

    censusAssistant.setAttribute('hidden', '');
    document.querySelector('.census-assistant-class').value = census;
    document.querySelector('#census-assistant-title').value = censusYear + ' ' + censusPlace + ' - <?= I18N::translate('Census transcript') ?> - <?= strip_tags($individual->fullName()) ?> - <?= I18N::translate('Household') ?>';

    let formData = new FormData();
    formData.append('census', census);
    formData.append('xref', '<?= $individual->xref() ?>');
    formData.append('tree_id', '<?= $individual->tree()->id() ?>');
    formData.append('_csrf', document.querySelector('meta[name=csrf]').content);

    fetch(<?= json_encode(route('module', ['module' => 'GEDFact_assistant', 'action' => 'CensusInitialize', 'tree' => $individual->tree()->name()])) ?>, {
        credentials: 'same-origin',
        body: formData,
        method: 'POST',
    })
    .then(response => response.text())
    .then((text) => {
        const data   = JSON.parse(text);
        document.querySelector('#census-assistant-table thead').innerHTML = data.header;
        document.querySelector('#census-assistant-table tbody').innerHTML = '';
        data.family.forEach(function(item) {
          const option    = document.createElement('option');
          option.text     = item.text;
          option.value    = item.xref;
          option.title    = item.relationship;
          option.disabled = item.disabled;
          fam_selector.add(option);
        });
      });
  }

  // When the census assistant is activated, show the input fields
  function censusAssistantLink() {
    document.querySelector('.census-selector').setAttribute('hidden', '');
    this.setAttribute('hidden', '');
    document.getElementById('census-assistant').removeAttribute('hidden');
    // Set the current individual as the head of household.
    censusAssistantAdd('individual');

    return false;
  }

  // Add the currently selected individual to the census
  function censusAssistantAdd(caller) {
    const selector = document.querySelector('#census-assistant-' + caller);
    const xref     = selector.options[selector.selectedIndex].value;
    const rows     = Array.from(document.querySelectorAll('#census-assistant-table tbody tr td:first-child input')).map(input => input.value);

    // Is the selected individual already in the census?
    if (xref !== '' && rows.includes(xref)) {
      clear_indi_select();
      return false;
    }

    const censusSelector = document.querySelector('.census-selector');
    const census         = censusSelector.options[censusSelector.selectedIndex].dataset.wtCensus;
    const headInput      = document.querySelector('#census-assistant-table td input');
    const head           = headInput === null ? xref : headInput.value;
    const formData       = new FormData();
    formData.append('census', census);
    formData.append('_csrf', document.querySelector('meta[name=csrf]').content);
    formData.append('head', head);
    formData.append('xref', xref);

    fetch(<?= json_encode(route('module', ['module' => 'GEDFact_assistant', 'action' => 'CensusIndividual', 'tree' => $individual->tree()->name()])) ?>, {
      credentials: 'same-origin',
      body: formData,
      method: 'POST'
    })
      .then(response => response.text())
      .then((text) => {
        document.querySelector('#census-assistant-table tbody').insertAdjacentHTML('beforeend', text);
        clear_indi_select();
        if (xref !== '') {
          $('#census-assistant-family')
            .val(null)
            .trigger('change')
            .children("option[value=" + xref + "]").prop('disabled', true);
        }
    });

    return false;
  }

    document.querySelectorAll('.census-selector').forEach(function (el) {
    el.addEventListener('change', censusAssistantSelect);
  });

  document.querySelectorAll('.census-assistant-link').forEach(function (el) {
    el.addEventListener('click', censusAssistantLink);
  });

  document.querySelectorAll('.census-assistant-add').forEach(function (el) {
    el.addEventListener('click', () => {
      censusAssistantAdd('individual')});
  });

  document.querySelectorAll('#census-assistant-table').forEach(function (el) {
    el.addEventListener('click', (el) => {
      if (el.target.matches('.wt-icon-delete')) {
        let line = el.target.closest('tr');
        let xref = line.firstChild.firstChild.value;
        line.remove();
        fam_selector.querySelector('option[value="'+ xref +'"]').disabled = false;
      }
    })
  })

  // Clear the individual search selector
  function clear_indi_select() {
    $('#census-assistant-individual').trigger({
      type: 'select2:unselect'
    });
  }

  //Set trigger points
  $(function() {
    $("#census-assistant-family")
      // Add selected person to census table
      .on('select2:select', function (el) {
        censusAssistantAdd('family');
      })
      .select2({
        placeholder: "<?= I18N::translate('Select a family member') ?>",
        allowClear: false,
      });

    $('#select2-census-assistant-family-container').addClass('text-muted');
  });


</script>
<?php View::endpush() ?>
